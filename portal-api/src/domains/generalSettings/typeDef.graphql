type HoldMusic {
  type: String
  preset: String
}

enum TwoFactorAuth {
  OPTIONAL
  MANDATORY
}

enum DirectNotifications {
  YES
  NO
}

enum LogCompliance {
  YES
  NO
}

type LocaleSettings {
  externalCallerIdNumber: String
  presentCallerId: Boolean
  timezone: String
  voice: String
  countryCode: String
  holdMusic: HoldMusic
  message: String
}

type GeneralSettings {
  orgId: ID
  name: String
  alias: String
  maxUsers: String
  maxDevices: String
  maxConnectors: String
  maxSIPTrunkLicenses: String
  directNotifications: DirectNotifications
  logCompliance: LogCompliance
  twoFactorAuth: TwoFactorAuth
}

extend type Query {
  generalSettings: GeneralSettings
  localeSettings: LocaleSettings
}

extend type Mutation {
  updateGeneralSettings(
    id: ID
    settings: inputUpdateGeneralSettings
  ): GeneralSettings
  updateLocaleSettings(settings: inputUpdateLocaleSettings): LocaleSettings
  deleteLocaleSettings(deleteInput: inputDeleteLocaleSettings): LocaleSettings
}

input inputUpdateGeneralSettings {
  orgId: ID
  name: String
  alias: String
  maxUsers: String
  maxDevices: String
  maxConnectors: String
  maxSIPTrunkLicenses: String
  directNotifications: DirectNotifications
  logCompliance: LogCompliance
  twoFactorAuth: TwoFactorAuth
}

input inputUpdateLocaleSettings {
  externalCallerIdNumber: String
  presentCallerId: Boolean
  timezone: String
  voice: String
  countryCode: String
}

input inputDeleteLocaleSettings {
  settingsCategory: String!
  settings: [String]!
}
