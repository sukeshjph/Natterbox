{"version":3,"sources":["../../src/index.js","../../src/build-country.js","../../src/build-timezone.js","../node_modules/ramda/es/sortBy.js","../node_modules/ramda/es/prop.js","../node_modules/ramda/es/omit.js"],"names":["data","require","buildCountry","buildTimezone","totalCountries","Object","totalTimezones","countries","timezones","memoizedCountries","memoizedTimezones","getCountry","id","country","memoizeCountry","getTimezone","name","timezone","memoizeTimezone","module","getAllCountries","getAllTimezones","getCountryForTimezone","tzName","getTimezonesForCountry","countryId","timezonesMap","tz","c","a","aliasTz","result","buildTimezonesMap","getTimezonesMap","tzMap","getOffsetStr","offset","hours","Math","min","getNumStr","input","num","aliasOf","utcOffset","dstOffset","Number","utcOffsetStr","dstOffsetStr","sortBy","_curry2","fn","list","Array","prototype","slice","call","sort","b","aa","bb","prop","p","obj","path","omit","names","index","idx","len","length","hasOwnProperty"],"mappings":"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","file":"static/js/11.54128add.chunk.js","sourcesContent":["const data = require('./data.json');\nconst buildCountry = require('./build-country');\nconst buildTimezone = require('./build-timezone');\nconst totalCountries = Object.keys(data.countries).length;\nconst totalTimezones = Object.keys(data.timezones).length;\nconst countries = {};\nconst timezones = {};\nlet memoizedCountries = 0;\nlet memoizedTimezones = 0;\n\nfunction getAllCountries() {\n  if (totalCountries !== memoizedCountries) Object.keys(data.countries).forEach(getCountry);\n  return { ...countries };\n}\n\nfunction getAllTimezones() {\n  if (totalTimezones !== memoizedTimezones) Object.keys(data.timezones).forEach(getTimezone);\n  return { ...timezones };\n}\n\nfunction getCountry(id) {\n  if (!countries[id]) memoizeCountry(buildCountry(data, id));\n  return countries[id] ? { ...countries[id] } : null;\n}\n\nfunction memoizeCountry(country) {\n  if (!country) return;\n  countries[country.id] = country;\n  memoizedCountries = Object.keys(countries).length;\n}\n\nfunction getTimezone(name) {\n  if (!timezones[name]) memoizeTimezone(buildTimezone(data, name));\n  return timezones[name] ? { ...timezones[name] } : null;\n}\n\nfunction memoizeTimezone(timezone) {\n  if (!timezone) return;\n  timezones[timezone.name] = timezone;\n  memoizedTimezones = Object.keys(timezone).length;\n}\n\nfunction getCountryForTimezone(tzName) {\n  const timezone = getTimezone(tzName) || {};\n  const country = timezone.country;\n  return country ? getCountry(country) : null;\n}\n\nfunction getTimezonesForCountry(countryId) {\n  const country = getCountry(countryId);\n  if (!country) return null;\n  const {timezones = []} = country;\n  return timezones.map(getTimezone);\n}\n\nmodule.exports = {\n  getAllCountries,\n  getAllTimezones,\n  getCountry,\n  getTimezone,\n  getCountryForTimezone,\n  getTimezonesForCountry\n};\n","let timezonesMap;\n\nfunction buildCountry(data, id) {\n  const name = data.countries[id];\n  if (!name) return null;\n\n  const tzMap = getTimezonesMap(data);\n  const timezones = tzMap[id] || [];\n\n  return {\n    id,\n    name,\n    timezones\n  };\n}\n\nfunction getTimezonesMap(data) {\n  if (!timezonesMap) timezonesMap = buildTimezonesMap(data);\n  return timezonesMap;\n};\n\nfunction buildTimezonesMap(data) {\n  return Object.keys(data.timezones).reduce((result, id) => {\n    const tz = data.timezones[id];\n    const {c, a} = tz;\n    const aliasTz = data.timezones[a] || {};\n    const country = c || aliasTz.c;\n\n    if (!country) return result;\n\n    if (!result[country]) result[country] = [];\n    result[country].push(id);\n\n    return result;\n  }, {});\n}\n\nmodule.exports = buildCountry;\n","function buildTimezone(data, name) {\n  const timezone = data.timezones[name];\n  if (!timezone) return null;\n\n  const {a: aliasOf = null} = timezone;\n  const aliasTz = aliasOf ? data.timezones[aliasOf] : {};\n  const tz = {\n    ...aliasTz,\n    ...data.timezones[name]\n  };\n\n  const country = tz.c || null;\n  const utcOffset = tz.u;\n  const dstOffset = Number.isInteger(tz.d) ? tz.d : utcOffset;\n\n  return {\n    name,\n    country,\n    utcOffset,\n    utcOffsetStr: getOffsetStr(utcOffset),\n    dstOffset,\n    dstOffsetStr: getOffsetStr(dstOffset),\n    aliasOf\n  };\n}\n\nfunction getOffsetStr(offset) {\n  const hours = Math.floor(offset / 60);\n  const min = offset % 60;\n  const sign = offset < 0 ? '-' : '+';\n\n  return `${sign}${getNumStr(hours)}:${getNumStr(min)}`;\n}\n\nfunction getNumStr(input) {\n  const num = Math.abs(input);\n  const prefix = num < 10 ? '0' : '';\n  return `${prefix}${num}`;\n}\n\nmodule.exports = buildTimezone;\n","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      const sortByFirstItem = R.sortBy(R.prop(0));\n *      const pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *\n *      const sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      const alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      const bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      const clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      const people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\n\nvar sortBy =\n/*#__PURE__*/\n_curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});\n\nexport default sortBy;","import _curry2 from \"./internal/_curry2.js\";\nimport path from \"./path.js\";\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig Idx -> {s: a} -> a | Undefined\n * @param {String|Number} p The property name or array index\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path, R.nth\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n *      R.prop(0, [100]); //=> 100\n *      R.compose(R.inc, R.prop('x'))({ x: 3 }) //=> 4\n */\n\nvar prop =\n/*#__PURE__*/\n_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\n\nexport default prop;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a partial copy of an object omitting the keys specified.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [String] -> {String: *} -> {String: *}\n * @param {Array} names an array of String property names to omit from the new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with properties from `names` not on it.\n * @see R.pick\n * @example\n *\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n */\n\nvar omit =\n/*#__PURE__*/\n_curry2(function omit(names, obj) {\n  var result = {};\n  var index = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    index[names[idx]] = 1;\n    idx += 1;\n  }\n\n  for (var prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop];\n    }\n  }\n\n  return result;\n});\n\nexport default omit;"],"sourceRoot":""}