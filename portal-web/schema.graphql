# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

type CallLog {
    connectedTo: String
    connectedToNumber: String
    direction: String
    flags: String
    fromNumber: String
    fromUserId: Int
    policy: String
    recording: FileStream
    timeRinging: Time
    timeStart: Date
    timeTalking: Time
    toNumberDialled: String
    type: String
}

type CoreApiUser {
    ArchivingScope: String
    AvailabilityProfileID: String
    AvailabilityStateID: String
    Created: String
    FirstName: String
    HomeOrgID: String
    ID: String
    LastName: String
    MiddleNames: String
    PermissionLevel: String
    PlaybackPerms: String
    PreviousLoginDetails: String
    PrimaryMobile: String
    Status: String
    TwoFactorAuth: String
    UserName: String
    Virgin: String
}

type Device {
    description: String
    enabled: Boolean
    id: ID
    location: String
    macAddress: String
    password: Null
    registered: Boolean
    registrationExpiry: Date
    sipExtension: String
}

type GeneralSettings {
    alias: String
    directNotifications: DirectNotifications
    logCompliance: LogCompliance
    maxConnectors: String
    maxDevices: String
    maxSIPTrunkLicenses: String
    maxUsers: String
    name: String
    orgId: ID
    twoFactorAuth: TwoFactorAuth
}

type Group {
    category: String
    emailAddress: String
    id: ID
    members: Members
    name: String
    sipExtension: String
    system: Boolean
}

type GroupLoggedIn {
    ID: Boolean
}

type HoldMusic {
    preset: String
    type: String
}

type LocaleSettings {
    countryCode: String
    externalCallerIdNumber: String
    holdMusic: HoldMusic
    message: String
    presentCallerId: Boolean
    timezone: String
    voice: String
}

type Logins {
    login: JSON
}

type Members {
    users: [ID]
}

type Mutation {
    createDevice(device: createDevice): Device
    createGroup(group: createGroup): Group
    createPolicy(policy: policyInput): Policy
    createUser(user: CreateUser): User
    deleteDevice(id: ID): Device
    deleteLocaleSettings(deleteInput: inputDeleteLocaleSettings): LocaleSettings
    deleteUser(id: Int): User
    putPolicy(id: ID, policy: policyInput): Policy
    updateDevice(device: updateDevice, id: ID): Device
    updateGeneralSettings(id: ID, settings: inputUpdateGeneralSettings): GeneralSettings
    updateGroup(group: updateGroup, id: ID): Group
    updateGroupUsers(id: ID, users: JSON): Group
    updateLocaleSettings(settings: inputUpdateLocaleSettings): LocaleSettings
    updateNumber(id: String, number: updateNumber): Number
    updateUser(id: String, user: UpdateUser): User
    updateVoicemail(id: ID, voicemail: inputVoicemail): Voicemail
}

type Number {
    areaCode: String
    areaName: String
    countryCode: String
    geographic: Boolean
    label: String
    localNumber: String
    number: String
    policyId: ID
    userId: ID
}

type Paginated {
    callLogs: [CallLog]!
    count: Int
    devices: [Device]!
    firstIndex: Int
    groups: [Group]!
    hasMore: Boolean!
    lastIndex: Int
    members: [User]
    nextIndex: Int
    numbers: [Number]!
    policies: [Policy]!
    prevIndex: Int
    sound: [Sound]
    users: [User]!
    usersExtended: [User]
}

type Policy {
    created: DateTime
    enabled: Boolean
    id: ID
    items: [PolicyItems]
    modified: DateTime
    name: String
    type: PolicyType
}

type PolicyItems {
    id: ID
    name: String
    subItems: JSON
    templateId: ID
    variables: JSON
}

type Query {
    callLogs(searchInput: CallLogSearchInput): [CallLog]
    callLogsPaginated(index: Int, length: Int, searchInput: CallLogSearchInput): Paginated!
    device(id: ID): Device
    devices: [Device]
    devicesPaginated(index: Int, length: Int): Paginated!
    generalSettings: GeneralSettings
    group(id: ID): Group
    groupLoggedIn(id: ID!): Logins
    groupMembersPaginated(id: ID, index: Int, length: Int): Paginated!
    groups: [Group]!
    groupsPaginated(index: Int, length: Int): Paginated!
    health: Boolean
    localeSettings: LocaleSettings
    numbers: [Number]!
    numbersPaginated(index: Int, length: Int): Paginated
    policies: [Policy]!
    policiesPaginated(index: Int, length: Int, searchInput: PolicySearchInput, type: String): Paginated!
    policy(id: ID): Policy
    sound: [Sound]
    soundPaginated(index: Int, length: Int): Paginated
    template(id: ID): Template
    templates: [Template]!
    user(id: ID!): User
    userSettings(id: ID!): User
    users: [User]
    usersPaginated(index: Int, length: Int): Paginated!
    voicemail(id: ID): Voicemail
}

type Sound {
    created: String
    description: String
    id: Int
    modified: String
    size: Int
    tag: String
}

type Template {
    description: String
    id: ID
    name: String
    parent: ID
    type: String
    variables: TemplateVariables
}

type TemplateVariables {
    additionalProperties: Boolean
    properties: JSON
    type: String
}

type User {
    availabilityProfileId: String
    availabilityStateId: String
    connectedTo: String
    connectedToNumber: String
    enabled: Boolean
    firstName: String
    id: ID
    lastName: String
    loggedIn: Boolean
    memberOf: [Int]
    middleNames: String
    password: String
    pciEnabled: Boolean
    permissionLevel: String
    primaryGroupId: String
    primaryMobileNumber: String
    scopes: [String]
    settings: UserSettings
    sipDevices: [String]
    sipExtension: String
    userId: ID
    userName: String
}

type UserSettings {
    countryCode: String
    externalCallerIdNumber: String
    internalCallerIdName: String
    internalCallerIdNumber: String
    presentCallerId: ID
    timezone: String
    voice: String
}

type Voicemail {
    ccMailboxes: ccMailboxes
    emailAttachFile: Boolean
    emailKeepFile: Boolean
    emailNotification: Boolean
    emailTo: [String]
}

type ccMailboxes {
    users: [Int]
}

enum DirectNotifications {
    NO
    YES
}

enum Flags {
    ACTIVE_RECORD_FAILED
    ACTIVE_RECORD_STREAM_FAILED
    ACTIVE_RECORD_STREAM_SUCCEEDED
    ACTIVE_RECORD_SUCCEEDED
    ALERT
    ANALYTICS_ENABLED
    ATTENDED_TRANSFERRED
    BLIND_TRANSFERRED
    CALLER_ID_WITHHELD
    CALL_QUEUE_AGENT
    CALL_QUEUE_IN_PATH
    CONNECTED_TO_CALL_QUEUE
    DIAGNOSTICS_ENABLED
    DIVERTED
    EARLY_DIVERTED
    EAVESDROPPED
    EAVESDROP_ATTACHED
    LATE_DIVERTED
    LISTEN_IN_ENABLED
    PICKED_OFF
    PICKED_UP
    RECORDED
    TRANSFERRED
    VIRTUAL_CHANNEL
    VOICEMAIL_RECORD_ENABLED
}

enum LogCompliance {
    NO
    YES
}

enum PolicyType {
    CALL
    NON_CALL
    SYSTEM
}

enum TwoFactorAuth {
    MANDATORY
    OPTIONAL
}

input CallLogSearchInput {
    connectedTo: String
    connectedToNumber: String
    endTime: String
    fromNumber: String
    fromUserId: Int
    startTime: String
    toNumberDialled: String
    uuid: String
}

input CreateUser {
    availabilityProfileId: Int
    availabilityStateId: Int
    enabled: Boolean!
    firstName: String!
    lastName: String!
    memberOf: [String]
    middleNames: String!
    pciEnabled: Boolean
    permissionLevel: String!
    pin: String
    primaryGroupId: Int
    primaryMobileNumber: String!
    sipDevices: [String]
    sipExtension: String
    userName: String!
}

input MembersInput {
    users: [Int]
}

input PolicyItemsInput {
    id: ID
    name: String
    subItems: JSON
    templateId: ID
    variables: JSON
}

input PolicySearchInput {
    name: String
}

input UpdateUser {
    availabilityProfileId: Int
    availabilityStateId: Int
    enabled: Boolean
    firstName: String
    lastName: String
    memberOf: [String]
    middleNames: String
    pciEnabled: Boolean
    permissionLevel: String
    pin: String
    primaryGroupId: Int
    primaryMobileNumber: String
    sipDevices: [String]
    sipExtension: String
    userName: String
}

input UserInput {
    availabilityProfileId: String
    availabilityStateId: String
    connectedTo: String
    connectedToNumber: String
    enabled: Boolean
    firstName: String
    id: ID
    lastName: String
    memberOf: [String]
    middleNames: String
    password: String
    pciEnabled: Boolean
    permissionLevel: String
    primaryGroupId: Int
    primaryMobileNumber: String
    scopes: [String]
    sipDevices: [String]
    sipExtension: String
    userId: ID
    userName: String
}

input createDevice {
    description: String
    enabled: Boolean
    location: String
    sipExtension: String
}

input createGroup {
    category: String!
    emailAddress: String
    members: MembersInput
    name: String!
    pin: String
    sipExtension: String
}

input inputCCMailboxes {
    users: [Int]
}

input inputDeleteLocaleSettings {
    settings: [String]!
    settingsCategory: String!
}

input inputUpdateGeneralSettings {
    alias: String
    directNotifications: DirectNotifications
    logCompliance: LogCompliance
    maxConnectors: String
    maxDevices: String
    maxSIPTrunkLicenses: String
    maxUsers: String
    name: String
    orgId: ID
    twoFactorAuth: TwoFactorAuth
}

input inputUpdateLocaleSettings {
    countryCode: String
    externalCallerIdNumber: String
    presentCallerId: Boolean
    timezone: String
    voice: String
}

input inputVoicemail {
    ccMailboxes: inputCCMailboxes
    emailAttachFile: Boolean
    emailKeepFile: Boolean
    emailNotification: Boolean
    emailTo: [String]
}

input policyInput {
    created: DateTime
    enabled: Boolean
    id: ID
    items: [PolicyItemsInput]
    modified: DateTime
    name: String
    type: PolicyType
}

input updateDevice {
    description: String
    enabled: Boolean
    location: String
    password: Null
    sipExtension: String
}

input updateGroup {
    category: String
    emailAddress: String
    members: MembersInput
    name: String
    pin: String
    sipExtension: String
}

input updateNumber {
    label: String
    userId: PositiveInt
}


scalar Date

scalar Time

scalar FileStream

scalar Null

"A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar."
scalar DateTime

scalar JSON

"Integers that will have a value greater than 0."
scalar PositiveInt

"A field whose value conforms to the standard internet email address format as specified in RFC822: https://www.w3.org/Protocols/rfc822/."
scalar EmailAddress

"A field whose value conforms to the standard E.164 format as specified in: https://en.wikipedia.org/wiki/E.164. Basically this is +17895551234."
scalar PhoneNumber

"A field whose value conforms to the standard postal code formats for United States, United Kingdom, Germany, Canada, France, Italy, Australia, Netherlands, Spain, Denmark, Sweden, Belgium, India, Austria, Portugal, Switzerland or Luxembourg."
scalar PostalCode

"A field whose value conforms to the standard URL format as specified in RFC3986: https://www.ietf.org/rfc/rfc3986.txt."
scalar URL